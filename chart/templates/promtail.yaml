apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  labels:
    app.kubernetes.io/name: promtail
  annotations: {}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  labels:
    app.kubernetes.io/name: promtail
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: promtail
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: promtail
      annotations:
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: promtail
      automountServiceAccountToken: true
      containers:
        - name: promtail
          image: docker.io/grafana/promtail:main
          imagePullPolicy: IfNotPresent
          args:
          - -config.file=/etc/promtail/kubernetes-config.yaml
          env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          ports:
            - name: http-metrics
              containerPort: 3101
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          volumeMounts:
          - name: config-volume
            mountPath: /etc/promtail
          - name: run
            mountPath: /run/promtail
          - name: varlog
            mountPath: /var/log
            readOnly: true
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: mntpods
            mountPath: /mnt/kubelet/pods
            readOnly: true
          - name: mntlibdockercontainers
            mountPath: /mnt/docker/containers
            readOnly: true
          - name: tmp
            mountPath: /tmp
            subPath: tmp
            readOnly: false
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config-volume
          configMap:
            name: promtail
        - name: run
          hostPath:
            path: /run/promtail
        - name: varlog
          hostPath:
            path: /var/log
        - name: mntlibdockercontainers
          hostPath:
            path: /mnt/docker/containers
        - name: mntpods
          hostPath:
            path: /mnt/kubelet/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail
  labels:
    app.kubernetes.io/name: promtail
data:
  kubernetes-config.yaml: |-
    server:
      http_listen_port: 3101
      grpc_listen_port: 0
    positions:
      filename: /tmp/positions.yaml
    clients:
      - url: http://loki:3100/loki/api/v1/push
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: journal
      journal:
        json: false
        max_age: 12h
        path: /var/log/journal
        matches: _TRANSPORT=kernel
        labels:
          job: systemd-journal
      relabel_configs:
        - source_labels: ['__journal__systemd_unit']
          target_label: 'unit'
    # - job_name: system
    #   system:
    #     json: false
    #     max_age: 24h
    #     path: /var/log/*log
    #   static_configs:
    #   - targets:
    #       - localhost
    #     labels:
    #       job: system-logs
    #       __path__: /var/log/*log
    - job_name: pod-logs
      kubernetes_sd_configs:
        - role: pod
      pipeline_stages:
        - cri: {}
        - docker: {}
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
            - __meta_kubernetes_namespace
            - __meta_kubernetes_pod_name
          target_label: job
        - action: replace
          source_labels:
            - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
          target_label: __path__
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
  labels:
    app.kubernetes.io/name: promtail
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: promtail
#   labels:
#     app.kubernetes.io/name: promtail
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: promtail
# subjects:
# - kind: ServiceAccount
#   name: promtail
#   namespace: monitoring