import { SpeakeasyBase } from "../../../internal/utils";
export declare class WatcherCustomEventAbi extends SpeakeasyBase {
}
export declare class WatcherCustomFilters extends SpeakeasyBase {
}
export declare class WatcherMetadata extends SpeakeasyBase {
}
export declare enum TriggerType {
    Block = "BLOCK",
    Transaction = "TRANSACTION",
    Event = "EVENT",
    GasPrice = "GAS_PRICE"
}
export declare enum WatcherType {
    MinedTransaction = "MINED_TRANSACTION",
    AddressActivity = "ADDRESS_ACTIVITY",
    AddressReceivedNativeCurrency = "ADDRESS_RECEIVED_NATIVE_CURRENCY",
    AddressSentNativeCurrency = "ADDRESS_SENT_NATIVE_CURRENCY",
    EventTransfer = "EVENT_TRANSFER",
    Erc721EventTransfer = "ERC721_EVENT_TRANSFER",
    Erc1155EventTransferSingle = "ERC1155_EVENT_TRANSFER_SINGLE",
    Erc1155EventTransferBatch = "ERC1155_EVENT_TRANSFER_BATCH",
    EventMint = "EVENT_MINT",
    EventApproval = "EVENT_APPROVAL",
    EventCustom = "EVENT_CUSTOM"
}
export declare class Watcher extends SpeakeasyBase {
    address: string;
    confirmationsBlocks: number;
    createdAt?: Date;
    customEventAbi?: WatcherCustomEventAbi[];
    customFilters?: WatcherCustomFilters;
    description?: string;
    id: string;
    metadata?: WatcherMetadata;
    name?: string;
    network: string;
    paused: boolean;
    pausedReason?: string;
    projectId: string;
    triggerType: TriggerType;
    type: WatcherType;
    updatedAt?: Date;
    webhookUrl: string;
}
