import * as operations from "../sdk/models/operations";
import { SDKConfiguration } from "./sdk";
import { AxiosRequestConfig } from "axios";
/**
 * Manage all the webhook you receive inside your app
 */
export declare class Webhook {
    private sdkConfiguration;
    constructor(sdkConfig: SDKConfiguration);
    /**
     * Cancel a webhook
     *
     * @remarks
     * Terminates the designated webhook, identified by its {id}, preventing any further processing.
     */
    cancel(req: operations.CancelWebhookRequest, config?: AxiosRequestConfig): Promise<operations.CancelWebhookResponse>;
    /**
     * Retrieve the list of Webhooks
     *
     * @remarks
     * Fetches the list of all webhooks dispatched to your server. You can apply filters and pagination for more tailored results.
     */
    getAll(req: operations.GetAllWebhookRequest, config?: AxiosRequestConfig): Promise<operations.GetAllWebhookResponse>;
    /**
     * Retrieve a Specific Webhook
     *
     * @remarks
     * Fetches the details of a specific webhook dispatched by Starton, identified uniquely by its {id}.
     */
    getOne(req: operations.GetOneWebhookRequest, config?: AxiosRequestConfig): Promise<operations.GetOneWebhookResponse>;
    /**
     * Retrieve Webhook Signing Secret
     *
     * @remarks
     * Fetches the signing secret associated with your project. Use this secret to securely verify the integrity and authenticity of payloads received from Starton's API in your server-side webhook implementations.
     */
    getSigningSecret(config?: AxiosRequestConfig): Promise<operations.GetOneWebhookSigningSecretResponse>;
    /**
     * Regenerate Webhook signing secret
     *
     * @remarks
     * Generates a new signing secret for your project, invalidating the old one. All subsequent payloads from Starton's API will be signed using this new secret, enhancing the security of your webhook integrations.
     */
    regenerateSigningSecret(config?: AxiosRequestConfig): Promise<operations.CreateWebhookSigningSecretResponse>;
    /**
     * Resend a Webhook
     *
     * @remarks
     * Initiates the resend process for a particular webhook to your server, facilitating testing scenarios or handling missed events.
     */
    resend(req: operations.ResendWebhookRequest, config?: AxiosRequestConfig): Promise<operations.ResendWebhookResponse>;
}
