import * as operations from "../sdk/models/operations";
import * as shared from "../sdk/models/shared";
import { SDKConfiguration } from "./sdk";
import { AxiosRequestConfig } from "axios";
/**
 * Starton kms service
 */
export declare class Kms {
    private sdkConfiguration;
    constructor(sdkConfig: SDKConfiguration);
    /**
     * Create a new KMS entry
     *
     * @remarks
     * Add a new Key Management System entry to the project.
     */
    create(req: shared.CreateKmsDto, config?: AxiosRequestConfig): Promise<operations.CreateKmsResponse>;
    /**
     * Remove a specific KMS entry
     *
     * @remarks
     * Delete a Key Management System entry from the project.
     */
    delete(req: operations.DeleteKmsRequest, config?: AxiosRequestConfig): Promise<operations.DeleteKmsResponse>;
    /**
     * Retrieve all Key Management Systems (KMS)
     *
     * @remarks
     * Provides a list of all Key Management Systems entries associated with the current project
     */
    getAll(req: operations.GetAllKmsRequest, config?: AxiosRequestConfig): Promise<operations.GetAllKmsResponse>;
    /**
     * Retrieve details of a specific KMS
     *
     * @remarks
     * Returns information of a particular Key Management Systems entry using its unique identifier.
     */
    getOne(req: operations.GetOneKmsRequest, config?: AxiosRequestConfig): Promise<operations.GetOneKmsResponse>;
    /**
     * Update the details of a KMS
     *
     * @remarks
     * Updates changes to a particular Key Management Systems entry.
     */
    update(req: operations.UpdateKmsRequest, config?: AxiosRequestConfig): Promise<operations.UpdateKmsResponse>;
}
