import * as operations from "../sdk/models/operations";
import { SDKConfiguration } from "./sdk";
import { Setting } from "./setting";
import { AxiosRequestConfig } from "axios";
/**
 * Starton Transaction Manager. Handle nonce issue, gas management, rebroadcasting etc.
 */
export declare class TransactionManager {
    setting: Setting;
    private sdkConfiguration;
    constructor(sdkConfig: SDKConfiguration);
    /**
     * Create a new transaction
     *
     * @remarks
     * Create a new blockchain transaction
     */
    create(req: operations.CreateTransactionRequest, config?: AxiosRequestConfig): Promise<operations.CreateTransactionResponse>;
    /**
     * Retrieve a List of Transactions
     *
     * @remarks
     * Retrieves a list of transactions.
     */
    getAll(req: operations.GetAllTransactionRequest, config?: AxiosRequestConfig): Promise<operations.GetAllTransactionResponse>;
    /**
     * Retrieve Available Nonces for a wallet
     *
     * @remarks
     * Gets all available nonces for a wallet, ensuring transaction integrity on the blockchain.
     */
    getAvailableNonces(req: operations.GetAvailableNoncesWalletRequest, config?: AxiosRequestConfig): Promise<operations.GetAvailableNoncesWalletResponse>;
    /**
     * Get a Specific Transaction
     *
     * @remarks
     * Retrieves the details of a specific transaction using its unique identifier.
     */
    getOne(req: operations.GetOneTransactionRequest, config?: AxiosRequestConfig): Promise<operations.GetOneTransactionResponse>;
    /**
     * Synchronize Nonces for a wallet
     *
     * @remarks
     * Updates the stored nonce values for a wallet, synchronizing them with the current blockchain state.
     */
    resyncNonce(req: operations.ResyncNoncesWalletRequest, config?: AxiosRequestConfig): Promise<operations.ResyncNoncesWalletResponse>;
}
