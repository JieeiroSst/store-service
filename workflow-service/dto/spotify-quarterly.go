package dto

import "github.com/JIeeiroSst/workflow-service/pkg/excel"

type SpotifyQuarterlyRequestDTO struct {
	Date                       string
	TotalRevenue               int
	CostOfRevenue              int
	GrossProfit                int
	PremiumRevenue             int
	PremiumCostRevenue         int
	PremiumGrossProfit         int
	AdRevenue                  int
	AdCostOfRevenue            int
	AdGrossProfit              int
	MAUs                       int
	PremiumMAUs                int
	AdMAUs                     int
	PremiumARPU                string
	SalesAndMarketingCost      int
	ResearchAndDevelopmentCost int
	GenrealAndAdminstraiveCost int
}

func FormatSpotifyQuarterly(generated []excel.AutoGenerated) (spotifyQuarterlys []SpotifyQuarterlyRequestDTO) {
	for _, value := range generated {
		var spotifyQuarterly SpotifyQuarterlyRequestDTO
		for i := 0; i < len(value.Values); i++ {
			switch i {
			case 1:
				spotifyQuarterly.Date = value.Values[i].UserEnteredValue.StringValue
			case 2:
				spotifyQuarterly.TotalRevenue = value.Values[i].UserEnteredValue.NumberValue
			case 3:
				spotifyQuarterly.CostOfRevenue = value.Values[i].UserEnteredValue.NumberValue
			case 4:
				spotifyQuarterly.GrossProfit = value.Values[i].UserEnteredValue.NumberValue
			case 5:
				spotifyQuarterly.PremiumRevenue = value.Values[i].UserEnteredValue.NumberValue
			case 6:
				spotifyQuarterly.PremiumCostRevenue = value.Values[i].UserEnteredValue.NumberValue
			case 7:
				spotifyQuarterly.PremiumGrossProfit = value.Values[i].UserEnteredValue.NumberValue
			case 8:
				spotifyQuarterly.AdRevenue = value.Values[i].UserEnteredValue.NumberValue
			case 9:
				spotifyQuarterly.AdGrossProfit = value.Values[i].UserEnteredValue.NumberValue
			case 10:
				spotifyQuarterly.AdRevenue = value.Values[i].UserEnteredValue.NumberValue
			case 11:
				spotifyQuarterly.AdCostOfRevenue = value.Values[i].UserEnteredValue.NumberValue
			case 12:
				spotifyQuarterly.AdGrossProfit = value.Values[i].UserEnteredValue.NumberValue
			case 13:
				spotifyQuarterly.MAUs = value.Values[i].UserEnteredValue.NumberValue
			case 14:
				spotifyQuarterly.PremiumARPU = value.Values[i].UserEnteredValue.StringValue
			case 15:
				spotifyQuarterly.SalesAndMarketingCost = value.Values[i].UserEnteredValue.NumberValue
			case 16:
				spotifyQuarterly.ResearchAndDevelopmentCost = value.Values[i].UserEnteredValue.NumberValue
			case 17:
				spotifyQuarterly.GenrealAndAdminstraiveCost = value.Values[i].UserEnteredValue.NumberValue
			}
		}
		spotifyQuarterlys = append(spotifyQuarterlys, spotifyQuarterly)
	}
	return
}

func FormatLocalSpotifyQuarterly(data []map[string]interface{}) (spotifyQuarterlies []SpotifyQuarterlyRequestDTO) {
	for _, m := range data {
		var spotifyQuarterly SpotifyQuarterlyRequestDTO
		for k, v := range m {
			switch k {
			case "date":
				spotifyQuarterly.Date = v.(string)
			case "total_revenue":
				spotifyQuarterly.TotalRevenue = v.(int)
			case "cost_of_revenue":
				spotifyQuarterly.CostOfRevenue = v.(int)
			case "gross_profit":
				spotifyQuarterly.GrossProfit = v.(int)
			case "premium_revenue":
				spotifyQuarterly.PremiumRevenue = v.(int)
			case "premium_cost_revenue":
				spotifyQuarterly.PremiumCostRevenue = v.(int)
			case "premium_gross_profit":
				spotifyQuarterly.PremiumGrossProfit = v.(int)
			case "ad_revenue":
				spotifyQuarterly.AdRevenue = v.(int)
			case "ad_cost_of_revenue":
				spotifyQuarterly.AdCostOfRevenue = v.(int)
			case "ad_gross_profit":
				spotifyQuarterly.AdGrossProfit = v.(int)
			case "ma_us":
				spotifyQuarterly.MAUs = v.(int)
			case "premium_ma_us":
				spotifyQuarterly.PremiumMAUs = v.(int)
			case "ad_ma_us":
				spotifyQuarterly.AdMAUs = v.(int)
			case "premium_arpu":
				spotifyQuarterly.PremiumARPU = v.(string)
			case "sales_and_marketing_cost":
				spotifyQuarterly.SalesAndMarketingCost = v.(int)
			case "research_and_development_cost":
				spotifyQuarterly.ResearchAndDevelopmentCost = v.(int)
			case "genreal_and_adminstraive_cost":
				spotifyQuarterly.GenrealAndAdminstraiveCost = v.(int)
			}
		}
		spotifyQuarterlies = append(spotifyQuarterlies, spotifyQuarterly)
	}
	return
}
