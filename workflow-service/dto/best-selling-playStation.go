package dto

import "github.com/JIeeiroSst/workflow-service/pkg/excel"

type BestSellingPlayStationRequestDTO struct {
	Game        string
	CopiesSold  string
	ReleaseDate string
	Genre       string
	Developer   string
	Publisher   string
	BatchID     string
}

func FormatBestSellingPlayStation(generated []excel.AutoGenerated) (bestSellingPlayStations []BestSellingPlayStationRequestDTO) {
	for _, value := range generated {
		var bestSellingPlayStation BestSellingPlayStationRequestDTO
		for i := 0; i < len(value.Values); i++ {
			switch i {
			case 1:
				bestSellingPlayStation.Game = value.Values[i].UserEnteredValue.StringValue
			case 2:
				bestSellingPlayStation.CopiesSold = value.Values[i].UserEnteredValue.StringValue
			case 3:
				bestSellingPlayStation.ReleaseDate = value.Values[i].UserEnteredValue.StringValue
			case 4:
				bestSellingPlayStation.Genre = value.Values[i].UserEnteredValue.StringValue
			case 5:
				bestSellingPlayStation.Developer = value.Values[i].UserEnteredValue.StringValue
			case 6:
				bestSellingPlayStation.Publisher = value.Values[i].UserEnteredValue.StringValue
			}
		}
		bestSellingPlayStations = append(bestSellingPlayStations, bestSellingPlayStation)
	}
	return
}

func FormatLocalSellingPlayStation(data []map[string]interface{}) (seattleWeathers []BestSellingPlayStationRequestDTO) {
	for _, m := range data {
		var seattleWeather BestSellingPlayStationRequestDTO
		for k, v := range m {
			switch k {
			case "game":
				seattleWeather.Game = v.(string)
			case "copies_sold":
				seattleWeather.CopiesSold = v.(string)
			case "release_date":
				seattleWeather.ReleaseDate = v.(string)
			case "genre":
				seattleWeather.Genre = v.(string)
			case "developer":
				seattleWeather.Developer = v.(string)
			case "publisher":
				seattleWeather.Publisher = v.(string)
			}
		}
		seattleWeathers = append(seattleWeathers, seattleWeather)
	}
	return
}
